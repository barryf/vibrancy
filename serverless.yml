service: vibrancy
app: vibrancy
org: barryf
provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

functions:
  foo:
    handler: handlers/foo.foo
  transform:
    handler: handlers/transform.transform
    events:
      - http:
          path: /{slug+}
          method: get
  list:
    handler: handlers/list.list
    events:
      - http:
          path: /
          method: get

resources:
  Resources:
    posts:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: posts
        AttributeDefinitions:
          - AttributeName: slug
            AttributeType: S
        KeySchema:
          - AttributeName: slug
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  #- serverless-domain-manager
  - serverless-dynamodb-local
  - serverless-offline

custom:
  customDomain:
    domainName: barryf.co.uk
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
  dynamodb:
    start:
      migrate: true
    stages:
      - dev
